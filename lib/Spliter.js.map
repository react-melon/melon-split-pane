{"version":3,"sources":["Spliter.js"],"names":["cx","Spliter","args","onMouseDown","bind","onMouseMove","onMouseUp","state","x","y","e","button","window","addEventListener","clientX","clientY","setState","resizing","props","onResizeStart","onResize","direction","delta","removeEventListener","onResizeEnd","render","children","rest","className","addStates","addVariants","build","propTypes","func","isRequired"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;;;;;AASA,QAAMA,KAAK,uBAAO,SAAP,CAAX;;AAEA;;;;;;QAKqBC,O;;;AAEjB;;;;;;AAMA,2BAAqB;AAAA;;AAAA,8CAANC,IAAM;AAANA,oBAAM;AAAA;;AAAA,qEAEjB,gDAASA,IAAT,EAFiB;;AAIjB,kBAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBC,IAAjB,OAAnB;AACA,kBAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBD,IAAjB,OAAnB;AACA,kBAAKE,SAAL,GAAiB,MAAKA,SAAL,CAAeF,IAAf,OAAjB;;AAEA;;;;AAIA,kBAAKG,KAAL,GAAa,EAAb;;AAEA;;;;AAIA,kBAAKC,CAAL,GAAS,IAAT;;AAEA;;;;AAIA,kBAAKC,CAAL,GAAS,IAAT;AAxBiB;AAyBpB;;AAED;;;;;;;;0BAMAN,W,wBAAYO,C,EAAG;;AAEX,gBAAIA,EAAEC,MAAF,KAAa,CAAjB,EAAoB;AAChB;AACH;;AAEDC,mBAAOC,gBAAP,CAAwB,WAAxB,EAAqC,KAAKR,WAA1C;AACAO,mBAAOC,gBAAP,CAAwB,SAAxB,EAAmC,KAAKP,SAAxC;;AAPW,gBAUPQ,OAVO,GAYPJ,CAZO,CAUPI,OAVO;AAAA,gBAWPC,OAXO,GAYPL,CAZO,CAWPK,OAXO;;;AAcX,iBAAKP,CAAL,GAASM,OAAT;AACA,iBAAKL,CAAL,GAASM,OAAT;;AAEA,iBAAKC,QAAL,CAAc,EAACC,UAAU,IAAX,EAAd;;AAEA,iBAAKC,KAAL,CAAWC,aAAX;AAEH,S;;0BAQDd,W,wBAAYK,C,EAAG;AAAA,gBAGPI,OAHO,GAKPJ,CALO,CAGPI,OAHO;AAAA,gBAIPC,OAJO,GAKPL,CALO,CAIPK,OAJO;AAAA,yBAUP,KAAKG,KAVE;AAAA,gBAQPE,QARO,UAQPA,QARO;AAAA,gBASPC,SATO,UASPA,SATO;;;AAYXD,qBAAS;AACLE,uBAAOD,cAAc,YAAd,GAA6BP,UAAU,KAAKN,CAA5C,GAAgDO,UAAU,KAAKN;AADjE,aAAT;AAIH,S;;0BAQDH,S,sBAAUI,C,EAAG;;AAET,iBAAKL,WAAL,CAAiBK,CAAjB;;AAEA,iBAAKF,CAAL,GAAS,KAAKC,CAAL,GAAS,CAAlB;;AAEAG,mBAAOW,mBAAP,CAA2B,WAA3B,EAAwC,KAAKlB,WAA7C;AACAO,mBAAOW,mBAAP,CAA2B,SAA3B,EAAsC,KAAKjB,SAA3C;;AAEA,iBAAKU,QAAL,CACI;AACIC,0BAAU;AADd,aADJ,EAII,KAAKC,KAAL,CAAWM,WAJf;AAOH,S;;0BAQDC,M,qBAAS;AAAA,0BAMD,KAAKP,KANJ;AAAA,gBAGDG,SAHC,WAGDA,SAHC;AAAA,gBAIDK,QAJC,WAIDA,QAJC;AAAA,gBAKEC,IALF;;;AAQL,gBAAMC,YAAY5B,GAAG,KAAKkB,KAAR,EACbW,SADa,CACH,EAACZ,UAAU,KAAKV,KAAL,CAAWU,QAAtB,EADG,EAEba,WAFa,CAEDT,SAFC,EAGbU,KAHa,EAAlB;;AAKA,mBACI;AAAA;AAAA,4CACQJ,IADR;AAEI,+BAAWC,SAFf;AAGI,iCAAa,KAAKzB,WAHtB;AAIKuB;AAJL,aADJ;AAQH,S;;;;;yBA3IgBzB,O;;;AA+IrBA,YAAQ+B,SAAR,GAAoB;AAChBZ,kBAAU,iBAAUa,IAAV,CAAeC,UADT;AAEhBf,uBAAe,iBAAUc,IAAV,CAAeC,UAFd;AAGhBV,qBAAa,iBAAUS,IAAV,CAAeC;AAHZ,KAApB","file":"Spliter.js","sourcesContent":["/**\n * @file Spliter\n * @author leon <ludafa@outlook.com>\n */\n\nimport React, {Component, PropTypes} from 'react';\n\nimport {create} from 'melon-core/classname/cxBuilder';\n\nconst cx = create('Spliter');\n\n/**\n * 分隔组件\n *\n * @extends React.Component\n */\nexport default class Spliter extends Component {\n\n    /**\n     * 构建函数\n     *\n     * @public\n     * @param {...*} args 参数\n     */\n    constructor(...args) {\n\n        super(...args);\n\n        this.onMouseDown = this.onMouseDown.bind(this);\n        this.onMouseMove = this.onMouseMove.bind(this);\n        this.onMouseUp = this.onMouseUp.bind(this);\n\n        /**\n         * 状态\n         * @type {Object}\n         */\n        this.state = {};\n\n        /**\n         * 在拖拽开始时的屏幕横坐标\n         * @type {number}\n         */\n        this.x = null;\n\n        /**\n         * 在拖拽开始时的屏幕纵坐标\n         * @type {number}\n         */\n        this.y = null;\n    }\n\n    /**\n     * 当 spliter 的鼠标弹按下时的处理\n     *\n     * @protected\n     * @param {Object} e 事件\n     */\n    onMouseDown(e) {\n\n        if (e.button !== 0) {\n            return;\n        }\n\n        window.addEventListener('mousemove', this.onMouseMove);\n        window.addEventListener('mouseup', this.onMouseUp);\n\n        const {\n            clientX,\n            clientY\n        } = e;\n\n        this.x = clientX;\n        this.y = clientY;\n\n        this.setState({resizing: true});\n\n        this.props.onResizeStart();\n\n    }\n\n    /**\n     * 当 spliter 的鼠标移动时的处理\n     *\n     * @protected\n     * @param {Object} e 事件\n     */\n    onMouseMove(e) {\n\n        const {\n            clientX,\n            clientY\n        } = e;\n\n        const {\n            onResize,\n            direction\n        } = this.props;\n\n        onResize({\n            delta: direction === 'horizontal' ? clientX - this.x : clientY - this.y\n        });\n\n    }\n\n    /**\n     * 当 spliter 的鼠标弹起时的处理\n     *\n     * @protected\n     * @param {Object} e 事件\n     */\n    onMouseUp(e) {\n\n        this.onMouseMove(e);\n\n        this.x = this.y = 0;\n\n        window.removeEventListener('mousemove', this.onMouseMove);\n        window.removeEventListener('mouseup', this.onMouseUp);\n\n        this.setState(\n            {\n                resizing: false\n            },\n            this.props.onResizeEnd\n        );\n\n    }\n\n    /**\n     * 渲染\n     *\n     * @public\n     * @return {React.Element}\n     */\n    render() {\n\n        const {\n            direction,\n            children,\n            ...rest\n        } = this.props;\n\n        const className = cx(this.props)\n            .addStates({resizing: this.state.resizing})\n            .addVariants(direction)\n            .build();\n\n        return (\n            <div\n                {...rest}\n                className={className}\n                onMouseDown={this.onMouseDown}>\n                {children}\n            </div>\n        );\n    }\n\n}\n\nSpliter.propTypes = {\n    onResize: PropTypes.func.isRequired,\n    onResizeStart: PropTypes.func.isRequired,\n    onResizeEnd: PropTypes.func.isRequired\n};\n"],"sourceRoot":"/source/"}