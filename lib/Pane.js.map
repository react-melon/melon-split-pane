{"version":3,"sources":["Pane.js"],"names":["cx","Pane","render","props","children","max","min","basis","grow","shrink","direction","style","limitPropName","build","flexBasis","flexGrow","flexShrink","STYLE_CLASSNAME","getPartClassName","propTypes","oneOfType","number","string","isRequired","defaultProps"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;;;;;AAWA,QAAMA,KAAK,uBAAO,MAAP,CAAX;;AAEA;;;;;;QAKqBC,I;;;;;;;;uBAQjBC,M,qBAAS;AAAA;;AAAA,yBAWD,KAAKC,KAXJ;AAAA,gBAGDC,QAHC,UAGDA,QAHC;AAAA,gBAIDC,GAJC,UAIDA,GAJC;AAAA,gBAKDC,GALC,UAKDA,GALC;AAAA,gBAMDC,KANC,UAMDA,KANC;AAAA,gBAODC,IAPC,UAODA,IAPC;AAAA,gBAQDC,MARC,UAQDA,MARC;AAAA,gBASDC,SATC,UASDA,SATC;AAAA,gBAUDC,KAVC,UAUDA,KAVC;;;AAaL,gBAAMC,gBAAgB,sBAAWF,cAAc,YAAd,GAA6B,OAA7B,GAAuC,QAAlD,CAAtB;;AAEA,mBACI;AAAA;AAAA;AACI,+BAAWV,GAAG,KAAKG,KAAR,EAAeU,KAAf,EADf;AAEI,uDACOF,KADP;AAEIG,mCAAWP,KAFf;AAGIQ,kCAAUP,IAHd;AAIIQ,oCAAYP;AAJhB,qDAKWG,aALX,IAK6BN,GAL7B,gCAMWM,aANX,IAM6BP,GAN7B,yBAFJ;AAUKD;AAVL,aADJ;AAcH,S;;;;;yBArCgBH,I;;;AAyCrBA,SAAKgB,eAAL,GAAuBjB,GAAGkB,gBAAH,EAAvB;;AAEAjB,SAAKkB,SAAL,GAAiB;AACbZ,eAAO,iBAAUa,SAAV,CAAoB,CACvB,iBAAUC,MADa,EAEvB,iBAAUC,MAFa,CAApB,CADM;AAKbd,cAAM,iBAAUa,MAAV,CAAiBE,UALV;AAMbd,gBAAQ,iBAAUY,MAAV,CAAiBE;AANZ,KAAjB;;AASAtB,SAAKuB,YAAL,GAAoB;AAChBjB,eAAO,MADS;AAEhBC,cAAM,CAFU;AAGhBC,gBAAQ;AAHQ,KAApB","file":"Pane.js","sourcesContent":["/**\n * @file Pane\n * @author leon <ludafa@outlook.com>\n */\n\nimport React, {Component, PropTypes} from 'react';\n\nimport {create} from 'melon-core/classname/cxBuilder';\n\nimport {capitalize} from './util.js';\n\nconst cx = create('Pane');\n\n/**\n * 窗口容器\n *\n * @extends React.Component\n */\nexport default class Pane extends Component {\n\n    /**\n     * 渲染\n     *\n     * @public\n     * @return {React.Element}\n     */\n    render() {\n\n        const {\n            children,\n            max,\n            min,\n            basis,\n            grow,\n            shrink,\n            direction,\n            style\n        } = this.props;\n\n        const limitPropName = capitalize(direction === 'horizontal' ? 'width' : 'height');\n\n        return (\n            <div\n                className={cx(this.props).build()}\n                style={{\n                    ...style,\n                    flexBasis: basis,\n                    flexGrow: grow,\n                    flexShrink: shrink,\n                    [`min${limitPropName}`]: min,\n                    [`max${limitPropName}`]: max\n                }}>\n                {children}\n            </div>\n        );\n    }\n\n}\n\nPane.STYLE_CLASSNAME = cx.getPartClassName();\n\nPane.propTypes = {\n    basis: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string\n    ]),\n    grow: PropTypes.number.isRequired,\n    shrink: PropTypes.number.isRequired\n};\n\nPane.defaultProps = {\n    basis: 'auto',\n    grow: 1,\n    shrink: 1\n};\n"]}